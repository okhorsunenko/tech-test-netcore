@using System.Linq
@using Todo.Controllers
@using Todo.Data
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

@inject ApplicationDbContext dbContext

@section Scripts {
    <script src="~/js/detailPageTodoList.js"></script>
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a id="toggleDoneItems">Hide Done Items</a>
            <span> | </span>
            <a asp-action="Detail" asp-controller="TodoList" asp-route-todoListId="@Model.TodoListId" asp-route-orderByRank=true>
                Order by Rank (from low to high)
            </a>
            <span> | </span>
            <a id="sortAsc">Sort Asc</a>
            <span> | </span>
            <a id="sortDesc">Sort Desc</a>
        </li>

        @foreach (var item in Model.Items.OrderBy(i => i.Importance))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass" data-item-is-done="@item.IsDone" data-rank="@item.Rank">
                
                <div class="row">

                <div class="col-md-4">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>
                <div class="col-md-4">
                    <input type="number" class="rank-input" data-item-id="@item.TodoItemId" value="@item.Rank" style="width: 60px;" />
                    <button type="button" class="btn btn-sm btn-info update-rank-btn" data-item-id="@item.TodoItemId">Update</button>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        <span class="display-name" data-email="@Gravatar.GetHash(item.ResponsibleParty.Email)">Loading...</span>
                        
                        @item.ResponsibleParty.UserName

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>

                    </small>
                </div>
                </div>

            </li>
        }
    </ul>
</div>

<div class="col-md-6">
    <h3>Add New Item</h3>
    <form id="addItemForm">
        <input type="hidden" name="TodoListId" value="@Model.TodoListId" />

        <div class="form-group">
            <label for="Title">Title</label>
            <input type="text" class="form-control" id="Title" name="Title" required />
        </div>

        <div class="form-group">
            <label for="Importance">Importance</label>
            <select class="form-control" id="Importance" name="Importance">
                @foreach (Importance value in Enum.GetValues(typeof(Importance)))
                {
                    <option value=@((int)value)>@value</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="ResponsiblePartyId">Responsible Party</label>
            <select class="form-control" id="ResponsiblePartyId" name="ResponsiblePartyId">
                @foreach (var user in dbContext.UserSelectListItems())
                {
                    <option value="@user.Value">@user.Text</option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary">Add Item</button>
    </form>
</div>